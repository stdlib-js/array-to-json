{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/type.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8';\nimport Uint8Array from '@stdlib/array-uint8';\nimport Uint8ClampedArray from '@stdlib/array-uint8c';\nimport Int16Array from '@stdlib/array-int16';\nimport Uint16Array from '@stdlib/array-uint16';\nimport Int32Array from '@stdlib/array-int32';\nimport Uint32Array from '@stdlib/array-uint32';\nimport Float32Array from '@stdlib/array-float32';\nimport Float64Array from '@stdlib/array-float64';\nimport Complex64Array from '@stdlib/array-complex64';\nimport Complex128Array from '@stdlib/array-complex128';\nimport BooleanArray from '@stdlib/array-bool';\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ],\n\t[ BooleanArray, 'BooleanArray' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert-instance-of';\nimport ctorName from '@stdlib/utils-constructor-name';\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of';\nimport CTORS from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isTypedArray from '@stdlib/assert-is-typed-array';\nimport isComplexTypedArray from '@stdlib/assert-is-complex-typed-array';\nimport isBooleanArray from '@stdlib/assert-is-booleanarray';\nimport reinterpret64 from '@stdlib/strided-base-reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided-base-reinterpret-complex128';\nimport reinterpretBoolean from '@stdlib/strided-base-reinterpret-boolean';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport typeName from './type.js';\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction typedarray2json( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else if ( isBooleanArray( arr ) ) {\n\t\tdata = reinterpretBoolean( arr, 0 );\n\t} else {\n\t\tthrow new TypeError( format( '01b2x', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default typedarray2json;\n"],"names":["CTORS","Float64Array","Float32Array","Int32Array","Uint32Array","Int16Array","Uint16Array","Int8Array","Uint8Array","Uint8ClampedArray","Complex64Array","Complex128Array","BooleanArray","typeName","arr","v","i","length","instanceOf","ctorName","getPrototypeOf","typedarray2json","data","out","isTypedArray","isComplexTypedArray","BYTES_PER_ELEMENT","reinterpret64","reinterpret128","isBooleanArray","TypeError","format","reinterpretBoolean","type","push"],"mappings":";;g/DAsCA,IAAIA,EAAQ,CACX,CAAEC,EAAc,gBAChB,CAAEC,EAAc,gBAChB,CAAEC,EAAY,cACd,CAAEC,EAAa,eACf,CAAEC,EAAY,cACd,CAAEC,EAAa,eACf,CAAEC,EAAW,aACb,CAAEC,EAAY,cACd,CAAEC,EAAmB,qBACrB,CAAEC,EAAgB,kBAClB,CAAEC,EAAiB,mBACnB,CAAEC,EAAc,iBCNjB,SAASC,EAAUC,GAClB,IAAIC,EACAC,EAGJ,IAAMA,EAAI,EAAGA,EAAIhB,EAAMiB,OAAQD,IAC9B,GAAKE,EAAYJ,EAAKd,EAAOgB,GAAK,IACjC,OAAOhB,EAAOgB,GAAK,GAIrB,KAAQF,GAAM,CAEb,IADAC,EAAII,EAAUL,GACRE,EAAI,EAAGA,EAAIhB,EAAMiB,OAAQD,IAC9B,GAAKD,IAAMf,EAAOgB,GAAK,GACtB,OAAOhB,EAAOgB,GAAK,GAGrBF,EAAMM,EAAgBN,EACtB,CACF,CCVA,SAASO,EAAiBP,GACzB,IAAIQ,EACAC,EACAP,EAEJ,GAAKQ,EAAcV,GAClBQ,EAAOR,OACD,GAAKW,EAAqBX,GAE/BQ,EAD8B,IAA1BR,EAAIY,kBACDC,EAAeb,EAAK,GAEpBc,EAAgBd,EAAK,OAEvB,KAAKe,EAAgBf,GAG3B,MAAM,IAAIgB,UAAWC,EAAQ,QAASjB,IAFtCQ,EAAOU,EAAoBlB,EAAK,EAGhC,CAKD,IAJAS,EAAM,CACLU,KAAQpB,EAAUC,GAClBQ,KAAQ,IAEHN,EAAI,EAAGA,EAAIM,EAAKL,OAAQD,IAC7BO,EAAID,KAAKY,KAAMZ,EAAMN,IAEtB,OAAOO,CACR"}